<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_albero_8h" xml:lang="en-US">
<title>/home/minime/Documents/Programmazione_cpp/tema_240724/C++/albero.h File Reference</title>
<indexterm><primary>/home/minime/Documents/Programmazione_cpp/tema_240724/C++/albero.h</primary></indexterm>
<para>

<para>file for binary three <computeroutput>albero</computeroutput> class </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &lt;iostream&gt;
#include &lt;cassert&gt;
#include &lt;iterator&gt;
#include &lt;cstddef&gt;
</programlisting>Include dependency graph for albero.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="albero_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="albero_8h__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classalbero">albero&lt; T, Comparator &gt;</link></para>

<para>Class for rappresenting a binary three. </para>
</listitem>
            <listitem><para>struct <link linkend="_structalbero_1_1node">albero&lt; T, Comparator &gt;::node</link></para>

<para>struct for single node in the three </para>
</listitem>
            <listitem><para>class <link linkend="_classalbero_1_1const__iterator">albero&lt; T, Comparator &gt;::const_iterator</link></para>

<para>Read only iterator for the albero object. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_albero_8h_1adadcbb9e426e1bf6bd7ac06dac7f958b">LOG</link>(X)   std::cout &lt;&lt; X &lt;&lt; std::endl</para>
</listitem>
            <listitem><para>#define <link linkend="_albero_8h_1adadcbb9e426e1bf6bd7ac06dac7f958b">LOG</link>(X)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename T , typename Comp , typename P &gt; </para><para>void <link linkend="_albero_8h_1af99b53b1e905459a5a34548f1a9a61b3">printIF</link> (<link linkend="_classalbero">albero</link>&lt; T, Comp &gt; &amp;a)</para>

<para>this function prints only the data elements that satisty the P functor </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>file for binary three <computeroutput>albero</computeroutput> class </para>

<para><formalpara><title>Author</title>

<para>Yehan Sanjula Edirisinghe Mudiyanselage (<link xlink:href="mailto:y.edirisinghemudi@campus.unimib.it">y.edirisinghemudi@campus.unimib.it</link>) </para>
</formalpara>
<formalpara><title>Version</title>

<para>0.1 </para>
</formalpara>
<formalpara><title>Date</title>

<para>17-07-2024</para>
</formalpara>
<formalpara><title>Copyright</title>

<para>Copyright (c) 2024 </para>
</formalpara>
</para>
</section>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_albero_8h_1adadcbb9e426e1bf6bd7ac06dac7f958b"/><section>
    <title>LOG<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>LOG</primary><secondary>albero.h</secondary></indexterm>
<indexterm><primary>albero.h</primary><secondary>LOG</secondary></indexterm>
<para><computeroutput>#define LOG( X)   std::cout &lt;&lt; X &lt;&lt; std::endl</computeroutput></para><simplesect><title>Examples</title><link linkend="__2home_2minime_2Documents_2Programmazione_cpp_2tema_240724_2C_09_09_2albero_8h-example">/home/minime/Documents/Programmazione_cpp/tema_240724/C++/albero.h</link>.</simplesect>
</section>
<anchor xml:id="_albero_8h_1adadcbb9e426e1bf6bd7ac06dac7f958b"/><section>
    <title>LOG<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>LOG</primary><secondary>albero.h</secondary></indexterm>
<indexterm><primary>albero.h</primary><secondary>LOG</secondary></indexterm>
<para><computeroutput>#define LOG( X)</computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_albero_8h_1af99b53b1e905459a5a34548f1a9a61b3"/><section>
    <title>printIF()</title>
<indexterm><primary>printIF</primary><secondary>albero.h</secondary></indexterm>
<indexterm><primary>albero.h</primary><secondary>printIF</secondary></indexterm>
<computeroutput>template&lt;typename T , typename Comp , typename P &gt; </computeroutput><para><computeroutput>void printIF (<link linkend="_classalbero">albero</link>&lt; T, Comp &gt; &amp; a)</computeroutput></para><para>

<para>this function prints only the data elements that satisty the P functor </para>
</para>

<para><note><title>Note</title>

<para>see documentation for functor description</para>
</note>

                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>type of data </para>
</entry>
                            </row>
                            <row>
<entry>Comp</entry><entry>
<para>comparator </para>
</entry>
                            </row>
                            <row>
<entry>P</entry><entry>
<para>condition for printing </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>a</entry><entry>
<para>albero obj to scan for printing </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<simplesect><title>Examples</title><link linkend="__2home_2minime_2Documents_2Programmazione_cpp_2tema_240724_2C_09_09_2albero_8h-example">/home/minime/Documents/Programmazione_cpp/tema_240724/C++/albero.h</link>.</simplesect>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="albero_8h_af99b53b1e905459a5a34548f1a9a61b3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
